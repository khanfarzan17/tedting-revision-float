{"version":3,"file":"static/js/388.35f38345.chunk.js","mappings":"8RAoDA,EAhDqBA,IAWd,IAXe,QACpBC,EAAU,UAAS,KACnBC,EAAO,KAAI,KACXC,EAAO,SAAQ,SACfC,GAAW,EAAK,QAChBC,EAAO,UACPC,EAAY,GAAE,MACdC,EAAK,KACLC,EAAI,SACJC,GAEDT,EADIU,GAAKC,EAAAA,EAAAA,GAAAX,EAAAY,GAER,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACLd,QAASA,EACTC,KAAMA,EACNC,KAAMA,EACNC,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXC,MAAOA,GACHG,GAAK,IAAAM,SAAA,CAERP,IACCQ,EAAAA,EAAAA,KAAA,OACEC,IAAKT,EACLU,IAAKX,EACLY,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,YAAa,SAEtD,IAEFf,KACM,C,2MCjCb,MAmCA,EAnCmBR,IAAuF,IAAtF,UAAEwB,EAAY,CAAC,OAAQ,MAAO,MAAO,OAAQ,OAAM,SAAEC,GAAW,EAAI,SAAEC,GAAU1B,EAClG,MAAO2B,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAYnC,OACEhB,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBU,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJH,EAAAA,EAAAA,MAAA,OAAKP,UAAU,cAAaU,SAAA,EAC5BC,EAAAA,EAAAA,KAACa,EAAAA,EAAY,CACXL,SAAUA,EACVM,aAhBgBC,IACpB,MAAMC,EAAYR,EAAW,IAAIO,GAAiB,CAACA,GACnDJ,EAASK,GAGLP,GACFA,EAASO,EACX,EAUIC,KAAK,OACLC,MAAOX,KAETP,EAAAA,EAAAA,KAAA,OAAKX,UAAU,YAAWU,SACvBW,EAAMS,OAAS,EACdT,EAAMU,KAAI,CAACC,EAAMC,KAAU1B,EAAAA,EAAAA,MAAA,KAAAG,SAAA,CAAe,gBAAIsB,EAAKJ,OAAhBK,MAEnCtB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kCAIH,E,wBC/BV,MA4BA,EA5BoBhB,IAAuD,IAAtD,KAAEwC,EAAI,OAAEC,EAAM,MAAElC,EAAK,SAAES,EAAQ,cAAE0B,GAAe1C,EACnE,OACEa,EAAAA,EAAAA,MAAC8B,EAAAA,EAAK,CAACH,KAAMA,EAAMC,OAAQA,EAAQvC,KAAK,KAAK0C,UAAQ,EAAA5B,SAAA,EACnDC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAME,OAAM,CAACC,aAAW,EAAA9B,UACvBC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAMI,MAAK,CAAA/B,SAAET,GAAS,mBAEzBU,EAAAA,EAAAA,KAAC0B,EAAAA,EAAMK,KAAI,CAAAhC,SAAEA,KACbC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAMM,OAAM,CAAAjC,SACV0B,EACCA,EAAcL,KAAI,CAACa,EAAKX,KACtBtB,EAAAA,EAAAA,KAACH,EAAAA,EAAM,CAELb,QAASiD,EAAIjD,SAAW,YACxBI,QAAS6C,EAAI7C,QAAQW,SAEpBkC,EAAIC,OAJAZ,MAQTtB,EAAAA,EAAAA,KAACH,EAAAA,EAAM,CAACb,QAAQ,YAAYI,QAASoC,EAAOzB,SAAC,cAK3C,EC6DZ,EA3EmBoC,KACjB,MAAOC,EAAWC,IAAgBzB,EAAAA,EAAAA,WAAS,GAK3C,OACEhB,EAAAA,EAAAA,MAAA0C,EAAAA,SAAA,CAAAvC,SAAA,EACEH,EAAAA,EAAAA,MAAC2C,EAAAA,EAAK,CAAClD,UAAU,OAAOmD,IAAK,EAAEzC,SAAA,EAG7BH,EAAAA,EAAAA,MAAC2C,EAAAA,EAAK,CAACE,UAAU,aAAY1C,SAAA,EAC3BH,EAAAA,EAAAA,MAAC8C,EAAAA,EAAQ,CAAA3C,SAAA,EACPC,EAAAA,EAAAA,KAAC0C,EAAAA,EAASC,OAAM,CACd3D,QAAQ,yBACR4D,GAAG,iBAAgB7C,SACpB,uBAIDH,EAAAA,EAAAA,MAAC8C,EAAAA,EAASG,KAAI,CAAA9C,SAAA,EACZC,EAAAA,EAAAA,KAAC0C,EAAAA,EAASI,KAAI,CAACC,KAAK,aAAYhD,SAAC,YACjCC,EAAAA,EAAAA,KAAC0C,EAAAA,EAASI,KAAI,CAACC,KAAK,aAAYhD,SAAC,oBACjCC,EAAAA,EAAAA,KAAC0C,EAAAA,EAASI,KAAI,CAACC,KAAK,aAAYhD,SAAC,0BAIrCC,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,CACXhE,QAAQ,sBAERO,KAAK,yBAKTS,EAAAA,EAAAA,KAACiD,EAAU,CACT1C,UAAW,CAAC,QACZC,UAAU,EACVC,SApCkBC,IACxBwC,QAAQC,IAAI,kBAAmBzC,EAAM,KAuCjCd,EAAAA,EAAAA,MAAC2C,EAAAA,EAAK,CAACE,UAAU,aAAY1C,SAAA,EAC3BC,EAAAA,EAAAA,KAACoD,EAAAA,EAAKC,MAAK,CAACnE,KAAK,WAAWgD,MAAM,gBAClClC,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,CACXhE,QAAQ,kBAERI,QAASA,IAAMiD,GAAa,GAC5B9C,KAAK,kBAIXS,EAAAA,EAAAA,KAACsD,EAAW,CACV/B,KAAMa,EACNZ,OAAQA,IAAMa,GAAa,GAC3B/C,MAAM,qBACNmC,cAAe,CACb,CACES,MAAO,SACPlD,QAAS,SACTI,QAASA,IAAMiD,GAAa,IAE9B,CACEH,MAAO,UACPlD,QAAS,UACTI,QAASA,IAAMmE,MAAM,gBAEvBxD,UAEFC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iEAEJ,ECvEP,IAAIyD,EAAO,KA4CI,SAAS,IAGtB,GAAIC,OAAOC,OAAQ,CAGjB,IAAIC,GAAe,EAEnBF,OAAOC,OAAOE,SAAS,UAAU,KAC3BD,EACFT,QAAQW,KACN,+EAIJF,GAAe,EA1DrB,WAAkB,IAADG,EAAAC,EACfC,UAAU,CAAC,+BAAgCC,IACzCR,OAAOQ,YAAcA,CAAW,IAIlC,IAAIC,GACW,QAAbJ,EAAAL,OAAOC,cAAM,IAAAI,GAAM,QAANC,EAAbD,EAAeK,YAAI,IAAAJ,OAAN,EAAbA,EAAqBK,cAAc,WACnCC,SAASC,eAAe,QAGrBJ,IACHA,EAAcG,SAASE,cAAc,OACrCL,EAAYtB,GAAK,OACba,OAAOC,QAAUD,OAAOC,OAAOS,KACjCV,OAAOC,OAAOS,KAAKK,YAAYN,GAG/BG,SAASF,KAAKK,YAAYN,IAOzBV,IAEHA,EAAOiB,EAAAA,WAAoBP,IAK7BV,EAAKkB,QACH9E,EAAAA,EAAAA,MAAC+E,EAAAA,GAAQ,CAACC,MAAOA,EAAAA,EAAM7E,SAAA,EACrBC,EAAAA,EAAAA,KAACmC,EAAU,KACXnC,EAAAA,EAAAA,KAAC6E,EAAAA,GAAc,OAMrB,CAuBMC,GAAO,GAEX,MACE5B,QAAQ6B,MACN,sEAGN,C","sources":["components/Button/Button.jsx","components/FileUploader/FileUploader.jsx","components/Modal/customModal.jsx","pages/mass-upload/massUpload.jsx","massuUploadIndex.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React, { useState } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\n\r\nconst FileUpload = ({ fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"], multiple = true, onUpload }) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleChange = (selectedFiles) => {\r\n    const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n    setFiles(fileArray);\r\n\r\n    // Callback function to send files to parent component\r\n    if (onUpload) {\r\n      onUpload(fileArray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <h2>Drag & Drop Files</h2>\r\n      <div className=\"upload-area\">\r\n      <FileUploader\r\n        multiple={multiple}\r\n        handleChange={handleChange}\r\n        name=\"file\"\r\n        types={fileTypes}\r\n      />\r\n      <div className=\"file-list\">\r\n        {files.length > 0 ? (\r\n          files.map((file, index) => <p key={index}>üìÅ {file.name}</p>)\r\n        ) : (\r\n          <p>No files uploaded yet.</p>\r\n        )}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React, {\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n} from \"react\";\r\nimport \"./Mockup.css\";\r\nimport { Dropdown, Form, Stack } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\n\r\nconst MassUpload = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const handleFileUpload = (files) => {\r\n    console.log(\"Uploaded files:\", files);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* choose opration and download template stack */}\r\n\r\n        <Stack direction=\"horizontal\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle\r\n              variant=\"outline-primary btn-lg\"\r\n              id=\"dropdown-basic\"\r\n            >\r\n              Choose Operations\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\r\n              <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n\r\n          <CustomButton\r\n            variant=\"link ms-auto btn-lg\"\r\n            // onClick={handleSelectAll}\r\n            text=\"Downlad Template\"\r\n          />\r\n        </Stack>\r\n\r\n        {/* drag and drop conatiner */}\r\n        <FileUpload\r\n          fileTypes={[\"XLSX\"]}\r\n          multiple={false}\r\n          onUpload={handleFileUpload}\r\n        />\r\n        {/* Form-cta submit*/}\r\n\r\n        <Stack direction=\"horizontal\">\r\n          <Form.Check type=\"checkbox\" label=\"background\" />\r\n          <CustomButton\r\n            variant=\"primary ms-auto\"\r\n            // onClick={handleSelectAll}\r\n            onClick={() => setModalShow(true)}\r\n            text=\"Submit\"\r\n          />\r\n        </Stack>\r\n      </Stack>\r\n      <CustomModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        title=\"Custom Modal Title\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Cancel\",\r\n            variant: \"danger\",\r\n            onClick: () => setModalShow(false),\r\n          },\r\n          {\r\n            label: \"Confirm\",\r\n            variant: \"success\",\r\n            onClick: () => alert(\"Confirmed!\"),\r\n          },\r\n        ]}\r\n      >\r\n        <p>This is a reusable modal component with dynamic content.</p>\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] üîç Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ‚úÖ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ‚è≥ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ‚úÖ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ‚ùå Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","fileTypes","multiple","onUpload","files","setFiles","useState","FileUploader","handleChange","selectedFiles","fileArray","name","types","length","map","file","index","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","btn","label","MassUpload","modalShow","setModalShow","_Fragment","Stack","gap","direction","Dropdown","Toggle","id","Menu","Item","href","CustomButton","FileUpload","console","log","Form","Check","CustomModal","alert","root","window","widget","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","querySelector","document","getElementById","createElement","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","error"],"sourceRoot":""}
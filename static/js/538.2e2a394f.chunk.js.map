{"version":3,"file":"static/js/538.2e2a394f.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/Loader/Loader.js","hooks/useToast.js","components/FileUploader/FileUploader.jsx","components/Modal/customModal.jsx","components/ErrorPopup/ErrorPopup.jsx","hooks/Mass-Upload/useMassUpload.js","components/bootsrap-table/Table.jsx","pages/mass-upload/mappedList.jsx","pages/mass-upload/validateFile.js","pages/mass-upload/massUpload.jsx","utils/downloadTemplate.js","massuUploadIndex.js","services/api/PlantAssignment/fetchCsrfService.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CustomButton = ({\r\n  variant = \"primary\",\r\n  size = \"md\",\r\n  type = \"button\",\r\n  disabled = false,\r\n  onClick,\r\n  className = \"\",\r\n  title,\r\n  text,\r\n  imageSrc,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Button\r\n      variant={variant}\r\n      size={size}\r\n      type={type}\r\n      disabled={disabled}\r\n      onClick={onClick}\r\n      className={className}\r\n      title={title}\r\n      {...props}\r\n    >\r\n      {imageSrc && (\r\n        <img\r\n          src={imageSrc}\r\n          alt={text}\r\n          style={{ width: \"20px\", height: \"20px\", marginRight: \"5px\" }}\r\n        />\r\n      )}{\" \"}\r\n      {/* Render image if provided */}\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  variant: PropTypes.string,\r\n  size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  imageSrc: PropTypes.string, // PropType for image source\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./Loader.css\"; // Create a CSS file for custom styles\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","// hooks/useToast.js\r\nimport { toast } from \"react-toastify\";\r\nimport { Bounce } from \"react-toastify\";\r\n\r\nconst useToast = () => {\r\n  const showToast = ({\r\n    message,\r\n    type = \"default\",\r\n    position = \"top-right\",\r\n    autoClose = 2000,\r\n    hideProgressBar = false,\r\n    closeOnClick = true,\r\n    pauseOnHover = false,\r\n    pauseOnFocusLoss= false,\r\n    draggable = true,\r\n    theme = \"light\",\r\n    transition = Bounce,\r\n    ...otherOptions\r\n  }) => {\r\n    const toastFunction = toast[type] || toast;\r\n\r\n    toastFunction(message, {\r\n      position,\r\n      autoClose,\r\n      hideProgressBar,\r\n      closeOnClick,\r\n      pauseOnHover,\r\n      draggable,\r\n      theme,\r\n      transition,\r\n      ...otherOptions,\r\n    });\r\n  };\r\n\r\n  const showSuccessToast = (message, options = {}) => {\r\n    showToast({ message, type: \"success\", ...options });\r\n  };\r\n\r\n  const showErrorToast = (message, options = {}) => {\r\n    showToast({ message, type: \"error\", ...options });\r\n  };\r\n\r\n  const showInfoToast = (message, options = {}) => {\r\n    showToast({ message, type: \"info\", ...options });\r\n  };\r\n\r\n  const showWarningToast = (message, options = {}) => {\r\n    showToast({ message, type: \"warn\", ...options });\r\n  };\r\n\r\n  return { showToast, showSuccessToast, showErrorToast, showInfoToast, showWarningToast };\r\n};\r\n\r\nexport default useToast;","import React, { useState } from \"react\";\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport \"./FileUploader.css\";\r\n\r\nconst FileUpload = ({\r\n  fileTypes = [\"JPEG\", \"PNG\", \"GIF\", \"XLSX\", \"CSV\"],\r\n  multiple = true,\r\n  onUpload,\r\n  onReset,\r\n}) => {\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const handleChange = (selectedFiles) => {\r\n    const fileArray = multiple ? [...selectedFiles] : [selectedFiles];\r\n    setFiles(fileArray);\r\n\r\n    // Callback function to send files to parent component\r\n    if (onUpload) {\r\n      onUpload(fileArray);\r\n    }\r\n  };\r\n\r\n  const handleClearFiles = () => {\r\n    setFiles([]);\r\n    if (onUpload) {\r\n      onUpload([]);\r\n    }\r\n    // Call the reset function to clear all states\r\n    if (onReset) {\r\n      onReset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <h2>Drag & Drop Files</h2>\r\n      <div className=\"upload-area\">\r\n        <FileUploader\r\n          multiple={multiple}\r\n          handleChange={handleChange}\r\n          name=\"file\"\r\n          types={fileTypes}\r\n        />\r\n        <div className=\"file-list\">\r\n          {files.length > 0 ? (\r\n            files.map((file, index) => (\r\n              <div className=\"mb-4\"\r\n                key={index}\r\n                style={{ display: \"flex\", alignItems: \"center\" }}\r\n              >\r\n                <p className=\"me-2 mb-0\">📁 {file.name}</p>\r\n                <button\r\n                  onClick={handleClearFiles}\r\n                  style={{\r\n                    background: \"none\",\r\n                    border: \"none\",\r\n                    cursor: \"pointer\",\r\n                    color: \"red\",\r\n                  }}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No files uploaded yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CustomModal = ({ show, onHide, title, children, footerButtons }) => {\r\n  return (\r\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title || \"Modal Title\"}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{children}</Modal.Body>\r\n      <Modal.Footer>\r\n        {footerButtons ? (\r\n          footerButtons.map((btn, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={btn.variant || \"secondary\"}\r\n              onClick={btn.onClick}\r\n            >\r\n              {btn.label}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          <Button variant=\"secondary\" onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorPopup = ({ errors }) => {\r\n  console.log(\"Errors in ErrorPopup:\", errors);\r\n  return (\r\n    <>\r\n      <Alert variant=\"danger\" className=\"text-left-align  text-sm-start mb-3\">\r\n        <strong>Note:</strong> Below reports show only uploaded spreadsheet\r\n        error rows. To resolve below issues, do the required changes in the\r\n        spreadsheet and re-import.\r\n      </Alert>\r\n      <div className=\"table-responsive\">\r\n        <Table striped bordered hover>\r\n          <thead className=\"table-light\">\r\n            <tr>\r\n              <th>Row Number</th>\r\n              <th>Error Description</th>\r\n              <th>Column Name </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {errors.length > 0 ? (\r\n              errors.map((error, index) => {\r\n                // Extract row number if present in error message\r\n                const rowMatch = error.match(/Row (\\d+):/);\r\n                const rowNum = rowMatch ? rowMatch[1] : \"-\";\r\n\r\n                // Extract column name from error message\r\n                const columnMatch = error.match(/\"([^\"]*)\" is required/);\r\n                const columnName = columnMatch ? columnMatch[1] : \"-\";\r\n                const errorMsg = rowMatch ? error.split(\": \")[1] : error;\r\n\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{rowNum}</td>\r\n                    <td>{errorMsg}</td>\r\n                    <td>{columnName}</td>\r\n                  </tr>\r\n                );\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan={2} className=\"text-center\">\r\n                  No Errors Found\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorPopup;\r\n","import { MSG_FETCH_CSRF_HEADERS_FAILED } from \"../../utils/toastMessages\";\r\nimport useToast from \"../useToast\";\r\nimport { fetchCsrfToken } from \"../../services/api/PlantAssignment/fetchCsrfService\";\r\nimport {  fetchData } from \"../../utils/helpers\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useMassUpload = () => {\r\n  const { showErrorToast } = useToast();\r\n  const [mappedAttributes, setMappedAttributes] = useState([]);\r\n\r\n\r\n\r\n// Function to Fetch Spreadsheet Column Mapping\r\nconst fetchColumnMapping = async () => {\r\n  try {\r\n    console.log(\"Fetching column mapping...\");\r\n    \r\n    // Get CSRF Headers\r\n    const headers = await fetchCsrfToken();\r\n    if (!headers) {\r\n      showErrorToast(\"Failed to fetch CSRF headers.\");\r\n      return;\r\n    }\r\n\r\n    // 🔹 Step 1: Call API 1 (GET) to Fetch Metadata\r\n    const metadataResponse = await fetchData(\r\n      \"GET\",\r\n        \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/modeler/dseng/dseng:EngItem/search?%24top=1\",\r\n        null\r\n    );\r\n\r\n    if (!metadataResponse || !metadataResponse.data) {\r\n      throw new Error(\"Failed to fetch metadata.\");\r\n    }\r\n    console.log(\"Metadata Response:\", metadataResponse.data);\r\n\r\n    const objectId = metadataResponse.data?.member?.[0]?.id;\r\n    if (!objectId) {\r\n      throw new Error(\"No object ID found in metadata.\");\r\n    }\r\n\r\n    console.log(\"Extracted Object ID:\", objectId);\r\n\r\n    // 🔹 Step 2: Call API 2 (POST) to Fetch Attributes\r\n    const attributeResponse = await fetchData(\r\n      \"POST\",\r\n      \"https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1/collabServices/attributes/op/read?tenant=OI000186152&xrequestedwith=xmlhttprequest\",\r\n      {\r\n        busIDs: [objectId],\r\n      }\r\n    );\r\n\r\n    if (!attributeResponse || !attributeResponse.data) {\r\n      throw new Error(\"Failed to fetch attribute data.\");\r\n    }\r\n\r\n    const attributes = await attributeResponse.json();\r\n    console.log(\"Attribute Response:\", attributes);\r\n\r\n    // 🔹 Step 3: Extract & Map Relevant Attributes\r\n    const relevantAttributes =\r\n    attributeResponse.data.results?.[0]?.groupData?.filter(\r\n      (attr) => attr.deploymentExtension === true\r\n    ) || [];\r\n\r\n    const mappedData = relevantAttributes.map((attr) => ({\r\n      uiLabel: attr.nls, // UI Display Name\r\n      backendName: attr.name, // Backend Name\r\n    }));\r\n\r\n    console.log(\"Mapped Attributes:\", mappedData);\r\n    setMappedAttributes(mappedData);\r\n    \r\n  } catch (error) {\r\n    console.error(\"Error fetching column mapping:\", error);\r\n    showErrorToast(error.message || \"Error fetching column mapping.\");\r\n  }\r\n};\r\n\r\nuseEffect(() => {\r\n  fetchColumnMapping();\r\n}, []);\r\n\r\nreturn { mappedAttributes };\r\n};\r\n\r\nexport default useMassUpload;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst StaticTable = ({ columns, data, handleCheckboxChange, checkedItems }) => {\r\n  console.log(\"StaticTable Columns prop:\", columns); // Debugging line for columns\r\n  console.log(\"StaticTable Data prop:\", data); // Debugging line for data\r\n\r\n  return (\r\n    <Table bordered className=\"table-light\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>Column Name</th>\r\n          <th>Attribute Name</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, index) => (\r\n          <tr key={index}>\r\n            <td>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={checkedItems[index] || false}\r\n                onChange={() => handleCheckboxChange(index)}\r\n              />\r\n            </td>\r\n            <td>{row.columnName}</td>\r\n            <td>\r\n              <select className=\"form-select\">\r\n                <option value={row.attributeName}>{row.attributeName}</option>\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default StaticTable;\r\n","import React, { useState } from \"react\"; // Corrected import for useState\r\nimport StaticTable from \"../../components/bootsrap-table/Table\";\r\n\r\nconst data = [\r\n  { columnName: \"Level\", attributeName: \"Level\" },\r\n  { columnName: \"Title\", attributeName: \"Title\" },\r\n  { columnName: \"Type\", attributeName: \"Type\" },\r\n  { columnName: \"Name\", attributeName: \"Name\" },\r\n  { columnName: \"Revision\", attributeName: \"Revision\" },\r\n  { columnName: \"Description\", attributeName: \"Description\" },\r\n  {\r\n    columnName: \"Enterprise Item Number\",\r\n    attributeName: \"Enterprise Item Number\",\r\n  },\r\n  { columnName: \"Title (Instance)\", attributeName: \"Title (Instance)\" },\r\n];\r\n\r\n// Define columns for StaticTable based on DataTable's structure\r\nconst columns = [\"\", \"Column Name\", \"Attribute Name\"]; // Headers as in DataTable\r\n\r\nconst MappedList = () => {\r\n  const [checkedItems, setCheckedItems] = useState({}); // Include useState as in DataTable example\r\n  const handleCheckboxChange = (index) => {\r\n    setCheckedItems({ ...checkedItems, [index]: !checkedItems[index] });\r\n  };\r\n\r\n  console.log(\"Data in MappedList before StaticTable:\", data); // Debugging line\r\n\r\n  return (\r\n    <StaticTable\r\n      columns={columns}\r\n      data={data}\r\n      handleCheckboxChange={handleCheckboxChange}\r\n      checkedItems={checkedItems}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MappedList;\r\n","import * as XLSX from \"xlsx\";\r\nimport config from \"./config.json\";\r\n\r\nconst validateFile = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    console.log(\"Starting file validation for:\", file.name);\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsBinaryString(file);\r\n\r\n    reader.onload = (e) => {\r\n      console.log(\"File successfully read. Parsing...\");\r\n\r\n      const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      console.log(\"Detected sheet name:\", sheetName);\r\n\r\n      const worksheet = workbook.Sheets[sheetName];\r\n\r\n      const headers = XLSX.utils.sheet_to_json(worksheet, { header: 1 })[0];\r\n      console.log(\"Extracted headers:\", headers);\r\n\r\n      if (!headers || headers.length === 0) {\r\n        console.error(\"❌ No headers found in the file.\");\r\n        reject([\"The uploaded file has no content or is empty.\"]);\r\n        return;\r\n      }\r\n\r\n      const sheetData = XLSX.utils.sheet_to_json(worksheet, { defval: \"\" });\r\n      console.log(\"Extracted sheet data:\", sheetData);\r\n\r\n      if (sheetData.length === 0) {\r\n        console.error(\"❌ No row data found. Only headers exist.\");\r\n        reject([\r\n          \"The uploaded file contains only headers but no data. Please add at least one row.\",\r\n        ]);\r\n        return;\r\n      }\r\n\r\n      const fileHeaders = Object.keys(sheetData[0]);\r\n      console.log(\"Parsed file headers:\", fileHeaders);\r\n\r\n      let matchedOperation = null;\r\n      for (const [key, value] of Object.entries(config.MassUpload)) {\r\n        if (\r\n          value.fileHeaders.every((header) => fileHeaders.includes(header))\r\n        ) {\r\n          matchedOperation = key;\r\n          console.log(\"Matched operation:\", matchedOperation);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!matchedOperation) {\r\n        console.error(\"❌ No matching operation found for given headers.\");\r\n        reject([\"File headers do not match any expected template.\"]);\r\n        return;\r\n      }\r\n\r\n      const expectedHeaders = config.MassUpload[matchedOperation].fileHeaders;\r\n      console.log(\"Expected Headers:\", expectedHeaders);\r\n      const mandatoryAttributes =\r\n        config.MassUpload[matchedOperation].mandatoryAttributes;\r\n      console.log(\"Mandatory Attributes:\", mandatoryAttributes);\r\n\r\n      const missingHeaders = expectedHeaders.filter(\r\n        (header) => !fileHeaders.includes(header)\r\n      );\r\n      if (missingHeaders.length > 0) {\r\n        console.error(\"❌ Missing headers:\", missingHeaders);\r\n        reject([`Missing required headers: ${missingHeaders.join(\", \")}`]);\r\n        return;\r\n      }\r\n\r\n      const validationErrors = [];\r\n      sheetData.forEach((row, index) => {\r\n        mandatoryAttributes.forEach((field) => {\r\n          if (!row[field] || row[field].toString().trim() === \"\") {\r\n            validationErrors.push(\r\n              `Row ${index + 2}: \"${field}\" is required but is empty.`\r\n            );\r\n          }\r\n        });\r\n      });\r\n\r\n      if (validationErrors.length > 0) {\r\n        console.error(\"❌ Validation errors found:\", validationErrors);\r\n        reject(validationErrors);\r\n      } else {\r\n        console.log(\"✅ File validation successful. No errors found.\");\r\n        resolve();\r\n      }\r\n    };\r\n\r\n    reader.onerror = () => {\r\n      console.error(\"❌ Error reading the file.\");\r\n      reject([\"File reading failed.\"]);\r\n    };\r\n  });\r\n};\r\n\r\nexport default validateFile;","import React, { useState } from \"react\";\r\nimport \"./Mockup.css\";\r\nimport { Form, Stack } from \"react-bootstrap\";\r\nimport CustomButton from \"../../components/Button/Button\";\r\nimport FileUpload from \"../../components/FileUploader/FileUploader\";\r\nimport CustomModal from \"../../components/Modal/customModal\";\r\nimport { downloadTemplate } from \"../../utils/downloadTemplate\";\r\nimport useToast from \"../../hooks/useToast\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ErrorPopup from \"../../components/ErrorPopup/ErrorPopup\";\r\nimport useMassUpload from \"../../hooks/Mass-Upload/useMassUpload\";\r\nimport MappedList from \"./mappedList\";\r\nimport validateFile from \"./validateFile\";\r\n\r\nconst MassUpload = () => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [errorModalShow, setErrorModalShow] = useState(false);\r\n  const [showContentErrors, setShowContentErrors] = useState(false);\r\n  const [showSpreadsheetModal, setShowSpreadsheetModal] = useState(false); // New state for spreadsheet modal\r\n  const { showErrorToast, showSuccessToast } = useToast();\r\n  const [isValidating, setIsValidating] = useState(false);\r\n  const [operationChoice, setOperationChoice] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const { mappedAttributes } = useMassUpload();\r\n\r\n  const handleFileUpload = (files) => {\r\n    if (files.length === 0) return;\r\n\r\n    setIsValidating(true);\r\n    validateFile(files[0])\r\n      .then(() => {\r\n        console.log(\"Validation successful (inside .then)\");\r\n        setErrors([]);\r\n        setIsValidating(false);\r\n        showSuccessToast(\" No Error File validated successfully!\"); // Show success toast\r\n      })\r\n      .catch((validationErrors) => {\r\n        console.log(\"Validation failed (inside .catch\", validationErrors);\r\n        setErrors(validationErrors);\r\n        setIsValidating(false);\r\n        setErrorModalShow(true);\r\n      });\r\n  };\r\n\r\n  const handleDownloadTemplate = () => {\r\n    downloadTemplate(showErrorToast)(operationChoice);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    // Reset all states to their initial values\r\n    setModalShow(false);\r\n    setErrorModalShow(false);\r\n    setShowContentErrors(false);\r\n    setShowSpreadsheetModal(false); // Also reset the spreadsheet modal state\r\n    setIsValidating(false);\r\n    setOperationChoice(\"\");\r\n    setErrors([]);\r\n\r\n    // Reset the dropdown\r\n    const selectElement = document.querySelector(\r\n      'select[aria-label=\"Choose Operations\"]'\r\n    );\r\n    if (selectElement) {\r\n      selectElement.value = \"\";\r\n    }\r\n\r\n    // Show toast message\r\n    showSuccessToast(\"Widget reset successfully!\");\r\n  };\r\n\r\n  const handleOpenSpreadsheetModal = () => {\r\n    setShowContentErrors(false); // Close content errors modal\r\n    setShowSpreadsheetModal(true); // Open spreadsheet modal\r\n  };\r\n\r\n  console.log(\"Operation Choice:\", errors);\r\n\r\n  return (\r\n    <>\r\n      <Stack className=\"mt-3\" gap={4}>\r\n        {/* Choose operation and download template */}\r\n        <Stack direction=\"horizontal\">\r\n          <Form.Select\r\n            aria-label=\"Choose Operations\"\r\n            style={{\r\n              fontSize: \"11px\",\r\n              width: \"30%\",\r\n              border: \"1px solid #007bff\",\r\n              outline: \"none\",\r\n              borderRadius: \"8px\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n            onChange={(e) => setOperationChoice(e.target.value)}\r\n          >\r\n            <option value=\"\">Choose Operations</option>\r\n            <option value=\"1\">Physical Product/Raw Material</option>\r\n            <option value=\"2\">Physical Product Structure</option>\r\n            <option value=\"3\">Document</option>\r\n            <option value=\"4\">Physical Product-Document</option>\r\n          </Form.Select>\r\n          {/* Conditionally render multiple file input for Document type */} \r\n          <div className=\"p-2 ms-auto\">\r\n            {operationChoice === \"3\" && (\r\n              <Form.Group\r\n                controlId=\"formFileMultiple\"\r\n                className=\"document-upload\"\r\n              >\r\n                <Form.Control type=\"file\" multiple />\r\n              </Form.Group>\r\n            )}\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <CustomButton\r\n              variant=\"link ms-auto \"\r\n              onClick={handleDownloadTemplate}\r\n              text=\"Download Template\"\r\n              size=\"md\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n\r\n        {/* Drag and Drop File Upload */}\r\n        <FileUpload\r\n          fileTypes={[\"XLSX\"]}\r\n          multiple={false}\r\n          onUpload={handleFileUpload}\r\n          onReset={handleReset}\r\n        />\r\n\r\n        {/* Show loader while validating */}\r\n        {isValidating && <Loader />}\r\n\r\n        {/* Submit Button and Content Error Button */}\r\n        <Stack direction=\"horizontal\" gap={2}>\r\n          <Form.Check type=\"checkbox\" label=\"Background\" />\r\n          <div className=\"ms-auto d-flex gap-5\">\r\n            {errors.length > 0 && (\r\n              <CustomButton\r\n                variant=\"danger\"\r\n                onClick={() => setShowContentErrors(true)}\r\n                text={`Content Errors (${errors.length})`}\r\n              />\r\n            )}\r\n\r\n            <CustomButton\r\n              variant=\"primary\"\r\n              onClick={() => setModalShow(true)}\r\n              text=\"Submit\"\r\n            />\r\n          </div>\r\n        </Stack>\r\n      </Stack>\r\n\r\n      {/* Content Errors Modal */}\r\n      <CustomModal\r\n        show={showContentErrors}\r\n        onHide={() => setShowContentErrors(false)}\r\n        title=\"Content Errors\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Manage Spreadsheet Columns\",\r\n            variant: \"info\",\r\n            onClick: handleOpenSpreadsheetModal, // open spreadsheet modal\r\n          },\r\n          {\r\n            label: \"Close\",\r\n            variant: \"danger\",\r\n            onClick: () => setShowContentErrors(false),\r\n          },\r\n        ]}\r\n      >\r\n        <ErrorPopup errors={errors} />\r\n      </CustomModal>\r\n\r\n      {/* Confirmation Modal */}\r\n      <CustomModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        title=\"Custom Modal Title\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Cancel\",\r\n            variant: \"danger\",\r\n            onClick: () => setModalShow(false),\r\n          },\r\n          {\r\n            label: \"Confirm\",\r\n            variant: \"success\",\r\n            onClick: () => alert(\"Confirmed!\"),\r\n          },\r\n        ]}\r\n      >\r\n        <p>This is a reusable modal component with dynamic content.</p>\r\n      </CustomModal>\r\n\r\n      {/* Column Mapping */}\r\n      <CustomModal\r\n        show={showSpreadsheetModal} // Control visibility with showSpreadsheetModal\r\n        onHide={() => setShowSpreadsheetModal(false)} // Hide the modal\r\n        title=\"Manage Spreadshet Column\"\r\n        footerButtons={[\r\n          {\r\n            label: \"Ok\",\r\n            variant: \"primary\",\r\n            onClick: () => setShowSpreadsheetModal(false), // close spreadsheet modal\r\n          },\r\n          {\r\n            label: \"Cancel\",\r\n            variant: \"danger\",\r\n            onClick: () => setShowSpreadsheetModal(false), // close spreadsheet modal\r\n          },\r\n        ]}\r\n      >\r\n        <p>\r\n          All column(s) of uploaded Spreadsheet are mapped to valid Attribute\r\n          Name. All mandatory Attribute Name is mapped to uploaded Spreadsheet\r\n          Column Name\r\n        </p>\r\n        <MappedList />\r\n      </CustomModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MassUpload;\r\n","import { MSG_DROPDOWN_NOT_SELECTED } from \"./toastMessages\";\r\n\r\nexport const downloadTemplate = (showErrorToast) => (operationChoice) => {\r\n  let url = \"\";\r\n  switch (operationChoice) {\r\n    case \"1\": // Physical Product/Raw Material\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"2\": // Physical Product Structure\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProductStructureSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"3\": // Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    case \"4\": // Physical Product-Document\r\n      url =\r\n        \"https://khanfarzan17.github.io/mass-upload-testing/PhysicalProduct-DocumentSpreadSheetTemplate.xlsx\";\r\n      break;\r\n    default:\r\n      showErrorToast(MSG_DROPDOWN_NOT_SELECTED);\r\n      return;\r\n  }\r\n  window.open(url, \"_blank\");\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport \"./styles/variables.css\";\r\nimport MassUpload from \"./pages/mass-upload/massUpload\";\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <Provider store={store}>\r\n      <MassUpload />\r\n      <ToastContainer />\r\n    </Provider>\r\n\r\n    //  <div>hi i am just a div {console.log(\"no worries\")}</div>\r\n  );\r\n  // console.log(\"[index.js] React app rendered.\");\r\n}\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n\r\n","import { loadWAFData } from \"../../../utils/helpers\";\r\n\r\nexport const fetchCsrfToken = async () => {\r\n  try {\r\n    let securityContext1 = window.widget.getValue(\"Credentials\");\r\n    const WAFData = await loadWAFData();\r\n    console.log(\"Security Context is:\", securityContext1);\r\n    const csrfURL = process.env.REACT_APP_CSRF_URL;\r\n\r\n    const response = await new Promise((resolve, reject) => {\r\n      WAFData.authenticatedRequest(csrfURL, {\r\n        method: \"GET\",\r\n        type: \"json\",\r\n        onComplete: resolve,\r\n        onFailure: reject,\r\n      });\r\n    });\r\n\r\n    const csrfToken = response.csrf.name;\r\n    const csrfValue = response.csrf.value;\r\n    const securityContextHeader = \"SecurityContext\";\r\n    const securityContextValue = securityContext1;\r\n\r\n    const headers = {\r\n      [csrfToken]: csrfValue,\r\n      [securityContextHeader]: securityContextValue,\r\n    };\r\n    return headers;\r\n  } catch (error) {\r\n    console.error(\"[CSRF] Failed to fetch token:\", error);\r\n    return; // Return empth so that the else block should execute.\r\n  }\r\n};\r\n"],"names":["_ref","variant","size","type","disabled","onClick","className","title","text","imageSrc","props","_objectWithoutProperties","_excluded","_jsxs","Button","_objectSpread","children","_jsx","src","alt","style","width","height","marginRight","Loader","useToast","showToast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","pauseOnFocusLoss","draggable","theme","transition","Bounce","otherOptions","toast","showSuccessToast","options","arguments","length","undefined","showErrorToast","showInfoToast","showWarningToast","fileTypes","multiple","onUpload","onReset","files","setFiles","useState","handleClearFiles","FileUploader","handleChange","selectedFiles","fileArray","name","types","map","file","index","display","alignItems","background","border","cursor","color","show","onHide","footerButtons","Modal","centered","Header","closeButton","Title","Body","Footer","btn","label","errors","console","log","_Fragment","Alert","Table","striped","bordered","hover","error","rowMatch","match","rowNum","columnMatch","columnName","errorMsg","split","colSpan","useMassUpload","mappedAttributes","setMappedAttributes","useEffect","async","_metadataResponse$dat","_metadataResponse$dat2","_metadataResponse$dat3","_attributeResponse$da","_attributeResponse$da2","_attributeResponse$da3","fetchCsrfToken","metadataResponse","fetchData","data","Error","objectId","member","id","attributeResponse","busIDs","attributes","json","mappedData","results","groupData","filter","attr","deploymentExtension","uiLabel","nls","backendName","fetchColumnMapping","columns","handleCheckboxChange","checkedItems","row","checked","onChange","value","attributeName","MappedList","setCheckedItems","StaticTable","Promise","resolve","reject","reader","FileReader","readAsBinaryString","onload","e","workbook","XLSX","target","result","sheetName","SheetNames","worksheet","Sheets","headers","sheet_to_json","header","sheetData","defval","fileHeaders","Object","keys","matchedOperation","key","entries","config","every","includes","expectedHeaders","mandatoryAttributes","missingHeaders","concat","join","validationErrors","forEach","field","toString","trim","push","onerror","MassUpload","modalShow","setModalShow","errorModalShow","setErrorModalShow","showContentErrors","setShowContentErrors","showSpreadsheetModal","setShowSpreadsheetModal","isValidating","setIsValidating","operationChoice","setOperationChoice","setErrors","Stack","gap","direction","Form","Select","fontSize","outline","borderRadius","fontWeight","Group","controlId","Control","CustomButton","handleDownloadTemplate","url","MSG_DROPDOWN_NOT_SELECTED","window","open","downloadTemplate","FileUpload","validateFile","then","catch","handleReset","selectElement","document","querySelector","Check","CustomModal","handleOpenSpreadsheetModal","ErrorPopup","alert","root","widget","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","body","getElementById","createElement","appendChild","ReactDOM","render","Provider","store","ToastContainer","start","securityContext1","getValue","WAFData","loadWAFData","csrfURL","process","response","authenticatedRequest","method","onComplete","onFailure","csrfToken","csrf","csrfValue","securityContextHeader","securityContextValue"],"sourceRoot":""}